from telegram import Update, ReplyKeyboardMarkup, MenuButtonCommands, BotCommand, ReplyKeyboardRemove
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters, ConversationHandler
from dotenv import load_dotenv
from oauth2client.service_account import ServiceAccountCredentials

import os
import gspread


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
SHEET_CREDENTIALS = 'credentials.json'  # –§–∞–π–ª —Å –∫–ª—é—á–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
SHEET_URL = 'https://docs.google.com/spreadsheets/d/14dJ2Bv1QseBRtNbpygGZc0rHZXVzE55z_3Ji40yotNA/edit?gid=0#gid=0'

load_dotenv()
TOKEN = os.environ.get("TOKEN")

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
(
    CHOOSING_COLOR,  # –í—ã–±–æ—Ä —Ü–≤–µ—Ç–æ—Ç–∏–ø–∞
    CHOOSING_SHAPE,  # –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Ñ–∏–≥—É—Ä—ã
    SHOWING_SKIRT,  # –ü–æ–∫–∞–∑ —é–±–æ–∫
    SHOWING_BLOUSE,  # –ü–æ–∫–∞–∑ –±–ª—É–∑–æ–∫
    SHOWING_JACKET,  # –ü–æ–∫–∞–∑ –∫—É—Ä—Ç–æ–∫
    FINAL_STEP  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
) = range(6)

# –°–ª–æ–≤–∞—Ä—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
CLOTHING_RECOMMENDATIONS = {
    "–ü–µ—Å–æ—á–Ω—ã–µ —á–∞—Å—ã": {
        "skirt": {"photo": "hourglass_skirt.jpg", "text": "–Æ–±–∫–∞-–∫–∞—Ä–∞–Ω–¥–∞—à –ø–æ–¥—á–µ—Ä–∫–Ω–µ—Ç –≤–∞—à—É —Ç–∞–ª–∏—é"},
        "blouse": {"photo": "hourglass_blouse.jpg", "text": "–ü—Ä–∏—Ç–∞–ª–µ–Ω–Ω–∞—è –±–ª—É–∑–∫–∞ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç"},
        "jacket": {"photo": "hourglass_jacket.jpg", "text": "–ñ–∞–∫–µ—Ç —Å –ø–æ—è—Å–æ–º –ø–æ–¥—á–µ—Ä–∫–Ω–µ—Ç –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏"}
    },
    "–ö—Ä—É–≥": {
        "skirt": {"photo": "round_skirt.jpg", "text": "–Æ–±–∫–∞ –ê-—Å–∏–ª—É—ç—Ç–∞ –≤–∏–∑—É–∞–ª—å–Ω–æ –≤—ã—Ç—è–Ω–µ—Ç —Ñ–∏–≥—É—Ä—É"},
        "blouse": {"photo": "round_blouse.jpg", "text": "–ë–ª—É–∑–∫–∞ —Å V-–æ–±—Ä–∞–∑–Ω—ã–º –≤—ã—Ä–µ–∑–æ–º —Å—Ç—Ä–æ–π–Ω–∏—Ç"},
        "jacket": {"photo": "round_jacket.jpg", "text": "–ü—Ä—è–º–æ–π –∂–∞–∫–µ—Ç —Å–æ–∑–¥–∞—Å—Ç —Å—Ç—Ä–æ–π–Ω—ã–π —Å–∏–ª—É—ç—Ç"}
    }
}


async def post_init(application):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞"""
    commands = [
        BotCommand("start", "–ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º"),
        BotCommand("help", "–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"),
        BotCommand("reset", "–°–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥"),
        BotCommand("cancel", "–û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ")
    ]
    await application.bot.set_my_commands(commands)
    await application.bot.set_chat_menu_button(menu_button=MenuButtonCommands())


async def is_user_allowed(user_id: int, username: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ"""
    try:
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Google Sheets
        scope = ['https://spreadsheets.google.com/feeds',
                 'https://www.googleapis.com/auth/drive']
        creds = ServiceAccountCredentials.from_json_keyfile_name(SHEET_CREDENTIALS, scope)
        client = gspread.authorize(creds)

        # –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        sheet = client.open_by_url(SHEET_URL).sheet1
        users = sheet.get_all_records()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ ID –∏–ª–∏ username
        for user in users:

            print("id = ", user_id, "  ", user.get('id', ''), "  ", username, "user = ", user)
            if  username.lower() == user.get('username', '').lower():
                return True
        return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return False

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ—Å—Ç—É–ø–∞"""
    user = update.effective_user

    if not await is_user_allowed(user.id, user.username):
        await update.message.reply_text(
            "‚õî –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.\n"
            "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫."
        )
        return ConversationHandler.END

    context.user_data.clear()
    keyboard = [["–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç–æ—Ç–∏–ø"]]
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–¥–µ–∂–¥—É –ø–æ –≤–∞—à–µ–º—É —Ç–∏–ø—É —Ñ–∏–≥—É—Ä—ã.",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    return CHOOSING_COLOR


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑ –ø–æ–º–æ—â–∏"""
    help_text = (
        "ü§ñ <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–¥–µ–∂–¥—É –ø–æ –≤–∞—à–µ–º—É —Ç–∏–ø—É —Ñ–∏–≥—É—Ä—ã.\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n"
        "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "/reset - —Å–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥\n"
        "/cancel - –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n\n"
        "–ü—Ä–æ—Å—Ç–æ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞!"
    )
    await update.message.reply_html(help_text)


async def reset_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–°–±—Ä–æ—Å –¥–∏–∞–ª–æ–≥–∞"""
    context.user_data.clear()
    await update.message.reply_text(
        "–î–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END


async def handle_color_type(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–æ—Ç–∏–ø–∞"""
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç–æ—Ç–∏–ø:",
        reply_markup=ReplyKeyboardMarkup([["–¢–µ–ø–ª—ã–π", "–•–æ–ª–æ–¥–Ω—ã–π"]], resize_keyboard=True)
    )
    return CHOOSING_COLOR


async def handle_color_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ü–≤–µ—Ç–æ—Ç–∏–ø–∞"""
    context.user_data['color_type'] = update.message.text
    await update.message.reply_text(
        "–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º —Ç–∏–ø —Ñ–∏–≥—É—Ä—ã:",
        reply_markup=ReplyKeyboardMarkup(
            [["–ü–µ—Å–æ—á–Ω—ã–µ —á–∞—Å—ã", "–ö—Ä—É–≥"], ["–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫", "–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫"]],
            resize_keyboard=True
        )
    )
    return CHOOSING_SHAPE


async def handle_shape_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ñ–∏–≥—É—Ä—ã"""
    shape = update.message.text
    context.user_data['shape_type'] = shape
    context.user_data['current_step'] = SHOWING_SKIRT
    return await show_recommendation(update, context)


async def show_recommendation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–∫–∞–∑ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –æ–¥–µ–∂–¥–µ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    shape = context.user_data['shape_type']
    current_step = context.user_data['current_step']

    if current_step == SHOWING_SKIRT:
        item_type = "skirt"
        next_step = SHOWING_BLOUSE
    elif current_step == SHOWING_BLOUSE:
        item_type = "blouse"
        next_step = SHOWING_JACKET
    else:
        item_type = "jacket"
        next_step = FINAL_STEP

    recommendation = CLOTHING_RECOMMENDATIONS[shape][item_type]

    try:
        with open(recommendation["photo"], "rb") as photo:
            await update.message.reply_photo(
                photo=photo,
                caption=recommendation["text"],
                reply_markup=ReplyKeyboardMarkup([["–î–∞–ª—å—à–µ ‚û°Ô∏è"]], resize_keyboard=True)
            )
    except FileNotFoundError:
        await update.message.reply_text(
            f"‚ö†Ô∏è –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n{recommendation['text']}",
            reply_markup=ReplyKeyboardMarkup([["–î–∞–ª—å—à–µ ‚û°Ô∏è"]], resize_keyboard=True)
        )

    context.user_data['current_step'] = next_step  # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥ –∑–∞—Ä–∞–Ω–µ–µ
    return current_step


async def handle_next_step(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–î–∞–ª—å—à–µ'"""
    current_step = context.user_data['current_step']

    if current_step == FINAL_STEP:
        await update.message.reply_text(
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞.",
            reply_markup=ReplyKeyboardRemove()
        )
        return FINAL_STEP

    return await show_recommendation(update, context)


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    await update.message.reply_text(
        '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.',
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    if not TOKEN:
        print("–û—à–∏–±–∫–∞: TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")
        return

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application = ApplicationBuilder().token(TOKEN).post_init(post_init).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("reset", reset_command))
    application.add_handler(CommandHandler("cancel", cancel))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            CHOOSING_COLOR: [
                MessageHandler(filters.Text("–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç–æ—Ç–∏–ø"), handle_color_type),
                MessageHandler(filters.Text(["–¢–µ–ø–ª—ã–π", "–•–æ–ª–æ–¥–Ω—ã–π"]), handle_color_choice)
            ],
            CHOOSING_SHAPE: [
                MessageHandler(filters.Text(["–ü–µ—Å–æ—á–Ω—ã–µ —á–∞—Å—ã", "–ö—Ä—É–≥", "–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫", "–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫"]),
                               handle_shape_choice)
            ],
            SHOWING_SKIRT: [
                MessageHandler(filters.Text("–î–∞–ª—å—à–µ ‚û°Ô∏è"), handle_next_step)
            ],
            SHOWING_BLOUSE: [
                MessageHandler(filters.Text("–î–∞–ª—å—à–µ ‚û°Ô∏è"), handle_next_step)
            ],
            SHOWING_JACKET: [
                MessageHandler(filters.Text("–î–∞–ª—å—à–µ ‚û°Ô∏è"), handle_next_step)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", cancel),
            CommandHandler("start", start)  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥
        ]
    )
    application.add_handler(conv_handler)

    application.run_polling()


if __name__ == "__main__":
    main()