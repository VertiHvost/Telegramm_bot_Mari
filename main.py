from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes, Application, \
    MessageHandler, filters
from dotenv import load_dotenv
import os

load_dotenv()
TOKEN = os.environ.get("TOKEN")

# –§—É–Ω–∫—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç–æ—Ç–∏–ø"]]
    reply_markup = ReplyKeyboardMarkup(
        keyboard,
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ü–æ—Ä–∞ –∑–∞–Ω—è—Ç—å—Å—è –≤–Ω–µ—à–Ω–∏–º –≤–∏–¥–æ–º.\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞:\n"
        "- –¢–≤–æ–π —Ü–≤–µ—Ç–æ—Ç–∏–ø\n"
        "- –§–æ—Ä–º–∞ –≥–æ–ª–æ–≤—ã\n"
        "- –¢–∏–ø —Ñ–∏–≥—É—Ä—ã",
        reply_markup=reply_markup
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç–æ—Ç–∏–ø"
async def handle_color_type(update: Update, context: ContextTypes.DEFAULT_TYPE):

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Ü–≤–µ—Ç–æ—Ç–∏–ø–æ–≤
    color_types_keyboard = [["–¢–µ–ø–ª—ã–π", "–•–æ–ª–æ–¥–Ω—ã–π"]]
    chat_id = update.effective_chat.id
    photo_path = "color_type.jpg"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    caption = "–í–æ—Ç –Ω–∞–≥–ª—è–¥–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∫–∞–∫ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å! üåü"
    reply_markup = ReplyKeyboardMarkup(
        color_types_keyboard,
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await context.bot.send_photo(
        chat_id=chat_id,
        photo=open(photo_path, "rb"),  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ
        caption=caption,
        reply_markup=reply_markup
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–æ—Ç–∏–ø–∞
async def handle_color_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Ü–≤–µ—Ç–æ—Ç–∏–ø–æ–≤
    chosen_color = update.message.text
    await update.message.reply_text(f"–û–±—ã—á–Ω–æ –ª—é–¥—è–º —Å {chosen_color.lower()} —Ç–∏–ø–æ–º –∫–æ–∂—ã —á–∞—â–µ"
                                        " —É–ª—ã–±–∞—é—Ç—Å—è –ª—é–¥–∏ üòä")
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º —Ç–≤–æ–π —Ç–ø–∏ —Ñ–∏–≥—É—Ä—ã"
                                    ", —ç—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã: \n"
                                    "1. –ó–µ—Ä–∫–∞–ª–æ\n"
                                    "2. –ü–æ–¥—Å–∫–∞–∑–∫–∞, –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∞ —Å–Ω–∏–∑—É")
    color_types_keyboard = [["–ü–µ—Å–æ—á–Ω—ã–µ —á–∞—Å—ã"], ["–ö—Ä—É–≥", "–ö–≤–∞–¥—Ä–∞—Ç"],
                             ["–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫", " –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫"]]
    chat_id = update.effective_chat.id
    photo_path = "shape_type.jpeg"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    caption = "–º—ã —Å–µ–π—á–∞—Å —Ç—É—Ç"
    reply_markup = ReplyKeyboardMarkup(
        color_types_keyboard,
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await context.bot.send_photo(
        chat_id=chat_id,
        photo=open(photo_path, "rb"),  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ
        caption=caption,
        reply_markup=reply_markup
    )



def main():
    application = Application.builder().token(TOKEN).build()
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...')

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Text("–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç–æ—Ç–∏–ø"), handle_color_type))
    application.add_handler(MessageHandler(filters.Text(["–¢–µ–ø–ª—ã–π", "–•–æ–ª–æ–¥–Ω—ã–π"]), handle_color_choice))

    application.run_polling()

if __name__ == "__main__":
    main()